#+TITLE: Introduction to Quantum Package
#+AUTHOR: Anthony Scemama
#+LANGUAGE:  en
#+HTML_LINK_UP: 01-JobScripts.html
#+HTML_LINK_HOME: 03-Champ.html
#+SETUPFILE: org-html-themes/org/theme-readtheorg-local.setup

#+ATTR_HTML: :width 100px
#+ATTR_LATEX: :width 100px
  [[./images/QP.png]]

* Overview

  [[https://quantumpackage.github.io/qp2][Quantum Package (QP)]] Quantum
  Package (QP) is an open-source environment for developing quantum chemistry
  programs. It was designed for code developers, but it is relatively simple to
  use.

* Environment

  Before using Quantum Package, the environment must be set up. This can be
  done by running the following command:

  #+begin_src bash
source /project/project_465000321/qp2/quantum_package.rc
  #+end_src

  This is automatically done when you load the complete environment
  for this training:
  
  #+begin_src bash
source /project/project_465000321/environment.sh
  #+end_src

  #+begin_tip
  If you are using QP interactively, an alternative is to run the QP shell:

  #+begin_src bash
/project/project_465000321/qp2/bin/qpsh
  #+end_src

  #+end_tip


* Running on LUMI

  Note that it is not possible to run the code interactively on the
  login nodes of LUMI. To run interactively, you will need to request
  an interactive job. Here is an example command to request a compute
  node for one hour:

  #+begin_src bash
salloc -N 1 --account=project_465000321 --time=01:00:00 --exclusive -n 1 -c 64 --partition=small
source /project/project_465000321/environment.sh
  #+end_src

  #+begin_note
  The =salloc= command creates a new shell, so if you want to use
  =qpsh= you need to run =qpsh= after =salloc=.
  #+end_note

  Once you have an interactive job, instead of using the command
  ~qp_run~ you will need to run ~qp_srun~ to run the QP programs.


* The EZFIO database

  Quantum Package (QP) stores input and output data in a database
  called the /EZFIO directory/.  To interact with the database, QP
  provides multiple shell functions, scripts and programs.

  As an example, let's consider a water molecule. First, we need to
  create a file with the geometry in either XYZ or Z-matrix
  format. For this example, we will use the coordinates in the file
  =h2o.xyz=:

   #+begin_src text :tangle h2o.xyz
3
Water
O       0.                     0.   0.
H      -0.756950272703377558   0.  -0.585882234512562827
H       0.756950272703377558   0.  -0.585882234512562827
   #+end_src

  Next, we can create an EZFIO database containing the geometry and
  the basis set parameters for the cc-pVDZ basis set by running the
  following command:

   #+begin_src bash
qp create_ezfio --basis=cc-pvdz h2o.xyz
   #+end_src

   This command will create a directory named =h2o.ezfio=, and this
   directory is selected as the currently used EZFIO directory in the
   current shell. To switch to another EZFIO database, use the
   command:

   #+begin_src bash
qp set_file other.ezfio
   #+end_src

   #+begin_note
  Note that when running interactively with =qpsh=, the current EZFIO
  database is displayed in the terminal. You should see =|h2o.ezfio>=
  in green before the command line. If you change directory,
  =|h2o.ezfio>= will become red, meaning that the EZFIO database is
  inaccessible.
   #+end_note

* Using QP commands

   To get documentation on the =qp= command, you can use the command
   #+begin_src bash
qp --help
   #+end_src

   #+begin_tip
   Note that all QP commands come with a =--help= option for documentation.
   #+end_tip

  To run a Hartree-Fock calculation, we will use the =scf= program of
  QP. To run a QP program, normally we use =qp run=. On LUMI, after
  allocating an interactive session, you can use =qp_srun=. For
  example:

   #+begin_src bash
qp_srun scf h2o.ezfio | tee h2o.scf.out
   #+end_src

  This command will run the SCF calculation and save the output in the file
  =h2o.scf.out= using the Linux command =tee=.

  The Hartree-Fock orbitals are now stored inside the EZFIO database. If you run
  the =scf= code again, it will converge in a single iteration because it takes the
  MOs stored inside the database as an initial guess.

Now that we have a set of Hartree-Fock orbitals, we can run a singles doubles
configuration interaction (CISD) calculation. But we don't want to include the
single- and double-excitations from the 1/s/ orbitals. For that, we need to run
the command

   #+begin_src bash
qp set_frozen_core
   #+end_src

   The output of this command shows that orbital 1 is labelled as
   =Core= and orbitals 2-24 are labelled as =Active=.
   To run the CISD calculation, use the command:

   #+begin_src bash
qp_srun cisd h2o.ezfio | tee h2o.cisd.out
   #+end_src

To modify the input parameters of the programs, you can use the interactive
command =qp edit=. This will open a temporary file filled-in with data coming
from the EZFIO database. When the file is saved and the editor is exited, the
data is saved back into the EZFIO.

   #+begin_tip
   You can change the text editor used by =qp_edit= by setting the
   =$EDITOR= environment variable. For example:
   #+begin_src bash
export EDITOR=emacs
   #+end_src
   #+end_tip

Alternatively, all the input parameters can be inspected in the shell using =qp get= and set using =qp set=. For example:

   #+begin_src bash
qp get determinants n_det_max
qp set determinants n_det_max 2000
   #+end_src

   #+begin_tip
   Note that you can use Tab-completion with the =qp= command, which makes the shell interaction more user-friendly.
   #+end_tip

